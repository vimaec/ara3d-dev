// AUTOGENERATED FILE: Do not edit directly, instead edit MathOps.tt

// MIT License - Copyright (C) Ara 3D, Inc.
// This file is subject to the terms and conditions defined in
// file 'LICENSE.txt', which is part of this source code package.

namespace Ara3D 
{
	public static partial class MathOps {

        public static int Add (this int v1, int v2) { return v1 + v2; }
        public static int Sub (this int v1, int v2) { return v1 - v2; }
        public static int Mul (this int v1, int v2) { return v1 * v2; }
        public static int Div (this int v1, int v2) { return v1 / v2; }
		public static int Neg (this int v) { return -v; }
        public static long Add (this long v1, long v2) { return v1 + v2; }
        public static long Sub (this long v1, long v2) { return v1 - v2; }
        public static long Mul (this long v1, long v2) { return v1 * v2; }
        public static long Div (this long v1, long v2) { return v1 / v2; }
		public static long Neg (this long v) { return -v; }
        public static float Add (this float v1, float v2) { return v1 + v2; }
        public static float Sub (this float v1, float v2) { return v1 - v2; }
        public static float Mul (this float v1, float v2) { return v1 * v2; }
        public static float Div (this float v1, float v2) { return v1 / v2; }
		public static float Neg (this float v) { return -v; }
        public static double Add (this double v1, double v2) { return v1 + v2; }
        public static double Sub (this double v1, double v2) { return v1 - v2; }
        public static double Mul (this double v1, double v2) { return v1 * v2; }
        public static double Div (this double v1, double v2) { return v1 / v2; }
		public static double Neg (this double v) { return -v; }
        public static Vector2 Add (this Vector2 v1, Vector2 v2) { return v1 + v2; }
        public static Vector2 Sub (this Vector2 v1, Vector2 v2) { return v1 - v2; }
        public static Vector2 Mul (this Vector2 v1, Vector2 v2) { return v1 * v2; }
        public static Vector2 Div (this Vector2 v1, Vector2 v2) { return v1 / v2; }
		public static Vector2 Neg (this Vector2 v) { return -v; }
        public static Vector3 Add (this Vector3 v1, Vector3 v2) { return v1 + v2; }
        public static Vector3 Sub (this Vector3 v1, Vector3 v2) { return v1 - v2; }
        public static Vector3 Mul (this Vector3 v1, Vector3 v2) { return v1 * v2; }
        public static Vector3 Div (this Vector3 v1, Vector3 v2) { return v1 / v2; }
		public static Vector3 Neg (this Vector3 v) { return -v; }
        public static Vector4 Add (this Vector4 v1, Vector4 v2) { return v1 + v2; }
        public static Vector4 Sub (this Vector4 v1, Vector4 v2) { return v1 - v2; }
        public static Vector4 Mul (this Vector4 v1, Vector4 v2) { return v1 * v2; }
        public static Vector4 Div (this Vector4 v1, Vector4 v2) { return v1 / v2; }
		public static Vector4 Neg (this Vector4 v) { return -v; }

        public static int Min (this int v1, int v2) { return System.Math.Min(v1, v2); }
        public static int Max (this int v1, int v2) { return System.Math.Max(v1, v2); }
        public static long Min (this long v1, long v2) { return System.Math.Min(v1, v2); }
        public static long Max (this long v1, long v2) { return System.Math.Max(v1, v2); }
        public static float Min (this float v1, float v2) { return System.Math.Min(v1, v2); }
        public static float Max (this float v1, float v2) { return System.Math.Max(v1, v2); }
        public static double Min (this double v1, double v2) { return System.Math.Min(v1, v2); }
        public static double Max (this double v1, double v2) { return System.Math.Max(v1, v2); }

        public static bool Gt (this int v1, int v2) { return v1 > v2; }
        public static bool Lt (this int v1, int v2) { return v1 < v2; }
        public static bool GtEq (this int v1, int v2) { return v1 >= v2; }
        public static bool LtEq (this int v1, int v2) { return v1 <= v2; }
        public static bool Eq (this int v1, int v2) { return v1 == v2; }
        public static bool NEq (this int v1, int v2) { return v1 != v2; }
        public static bool Gt (this long v1, long v2) { return v1 > v2; }
        public static bool Lt (this long v1, long v2) { return v1 < v2; }
        public static bool GtEq (this long v1, long v2) { return v1 >= v2; }
        public static bool LtEq (this long v1, long v2) { return v1 <= v2; }
        public static bool Eq (this long v1, long v2) { return v1 == v2; }
        public static bool NEq (this long v1, long v2) { return v1 != v2; }
        public static bool Gt (this float v1, float v2) { return v1 > v2; }
        public static bool Lt (this float v1, float v2) { return v1 < v2; }
        public static bool GtEq (this float v1, float v2) { return v1 >= v2; }
        public static bool LtEq (this float v1, float v2) { return v1 <= v2; }
        public static bool Eq (this float v1, float v2) { return v1 == v2; }
        public static bool NEq (this float v1, float v2) { return v1 != v2; }
        public static bool Gt (this double v1, double v2) { return v1 > v2; }
        public static bool Lt (this double v1, double v2) { return v1 < v2; }
        public static bool GtEq (this double v1, double v2) { return v1 >= v2; }
        public static bool LtEq (this double v1, double v2) { return v1 <= v2; }
        public static bool Eq (this double v1, double v2) { return v1 == v2; }
        public static bool NEq (this double v1, double v2) { return v1 != v2; }

		public static bool And (this bool a, bool b) { return a && b; }
		public static bool Or (this bool a, bool b) { return a || b; }
		public static bool NAnd (this bool a, bool b) { return !(a && b); }
		public static bool XOr (this bool a, bool b) { return a || b && !(a && b); }
		public static bool NOr (this bool a, bool b) { return !(a || b); }
		public static bool Not (this bool a) { return !a; }
		public static bool Eq (this bool a, bool b) { return a == b; }
		public static bool NEq ( this bool a, bool b) { return a != b; } 

		public static int And (this int a, int b) { return a & b; }
		public static int Or (this int a, int b) { return a | b; }
		public static int NAnd (this int a, int b) { return ~(a & b); }
		public static int XOr (this int a, int b) { return a | b & ~(a & b); }
		public static int NOr (this int a, int b) { return ~(a | b); }
		public static int Not (this int a) { return ~a; }
		public static long And (this long a, long b) { return a & b; }
		public static long Or (this long a, long b) { return a | b; }
		public static long NAnd (this long a, long b) { return ~(a & b); }
		public static long XOr (this long a, long b) { return a | b & ~(a & b); }
		public static long NOr (this long a, long b) { return ~(a | b); }
		public static long Not (this long a) { return ~a; }

		public static double Acos (this double x) { return System.Math.Acos(x); }
		public static float Acos (this float x) { return (float)System.Math.Acos(x); }
		public static double Asin (this double x) { return System.Math.Asin(x); }
		public static float Asin (this float x) { return (float)System.Math.Asin(x); }
		public static double Atan (this double x) { return System.Math.Atan(x); }
		public static float Atan (this float x) { return (float)System.Math.Atan(x); }
		public static double Cos (this double x) { return System.Math.Cos(x); }
		public static float Cos (this float x) { return (float)System.Math.Cos(x); }
		public static double Cosh (this double x) { return System.Math.Cosh(x); }
		public static float Cosh (this float x) { return (float)System.Math.Cosh(x); }
		public static double Exp (this double x) { return System.Math.Exp(x); }
		public static float Exp (this float x) { return (float)System.Math.Exp(x); }
		public static double Log (this double x) { return System.Math.Log(x); }
		public static float Log (this float x) { return (float)System.Math.Log(x); }
		public static double Log10 (this double x) { return System.Math.Log10(x); }
		public static float Log10 (this float x) { return (float)System.Math.Log10(x); }
		public static double Sin (this double x) { return System.Math.Sin(x); }
		public static float Sin (this float x) { return (float)System.Math.Sin(x); }
		public static double Sinh (this double x) { return System.Math.Sinh(x); }
		public static float Sinh (this float x) { return (float)System.Math.Sinh(x); }
		public static double Tan (this double x) { return System.Math.Tan(x); }
		public static float Tan (this float x) { return (float)System.Math.Tan(x); }
		public static double Tanh (this double x) { return System.Math.Tanh(x); }
		public static float Tanh (this float x) { return (float)System.Math.Tanh(x); }
		public static double Sqrt (this double x) { return System.Math.Sqrt(x); }
		public static float Sqrt (this float x) { return (float)System.Math.Sqrt(x); }

		public static float Sqr (this float x) { return x * x; }
		public static float Cube (this float x) { return x * x * x; }
		public static float Negate (this float x) { return -x; }
		public static float Abs(this float x) { return (float)System.Math.Abs(x); }
		public static float Inverse (this float x) { return (float)1 / x; }
		public static float Truncate (this float x) { return (float)System.Math.Truncate(x); }
		public static float Ceiling (this float x) { return (float)System.Math.Ceiling(x); }
		public static float Floor (this float x) { return (float)System.Math.Floor(x); }
		public static float Round (this float x) { return (float)System.Math.Round(x); }
		public static double Sqr (this double x) { return x * x; }
		public static double Cube (this double x) { return x * x * x; }
		public static double Negate (this double x) { return -x; }
		public static double Abs(this double x) { return (double)System.Math.Abs(x); }
		public static double Inverse (this double x) { return (double)1 / x; }
		public static double Truncate (this double x) { return (double)System.Math.Truncate(x); }
		public static double Ceiling (this double x) { return (double)System.Math.Ceiling(x); }
		public static double Floor (this double x) { return (double)System.Math.Floor(x); }
		public static double Round (this double x) { return (double)System.Math.Round(x); }

		public static Vector2 Acos (this Vector2 x) { return x.Select(MathOps.Acos); }
		public static Vector3 Acos (this Vector3 x) { return x.Select(MathOps.Acos); }
		public static Vector4 Acos (this Vector4 x) { return x.Select(MathOps.Acos); }
		public static Vector2 Asin (this Vector2 x) { return x.Select(MathOps.Asin); }
		public static Vector3 Asin (this Vector3 x) { return x.Select(MathOps.Asin); }
		public static Vector4 Asin (this Vector4 x) { return x.Select(MathOps.Asin); }
		public static Vector2 Atan (this Vector2 x) { return x.Select(MathOps.Atan); }
		public static Vector3 Atan (this Vector3 x) { return x.Select(MathOps.Atan); }
		public static Vector4 Atan (this Vector4 x) { return x.Select(MathOps.Atan); }
		public static Vector2 Cos (this Vector2 x) { return x.Select(MathOps.Cos); }
		public static Vector3 Cos (this Vector3 x) { return x.Select(MathOps.Cos); }
		public static Vector4 Cos (this Vector4 x) { return x.Select(MathOps.Cos); }
		public static Vector2 Cosh (this Vector2 x) { return x.Select(MathOps.Cosh); }
		public static Vector3 Cosh (this Vector3 x) { return x.Select(MathOps.Cosh); }
		public static Vector4 Cosh (this Vector4 x) { return x.Select(MathOps.Cosh); }
		public static Vector2 Exp (this Vector2 x) { return x.Select(MathOps.Exp); }
		public static Vector3 Exp (this Vector3 x) { return x.Select(MathOps.Exp); }
		public static Vector4 Exp (this Vector4 x) { return x.Select(MathOps.Exp); }
		public static Vector2 Log (this Vector2 x) { return x.Select(MathOps.Log); }
		public static Vector3 Log (this Vector3 x) { return x.Select(MathOps.Log); }
		public static Vector4 Log (this Vector4 x) { return x.Select(MathOps.Log); }
		public static Vector2 Log10 (this Vector2 x) { return x.Select(MathOps.Log10); }
		public static Vector3 Log10 (this Vector3 x) { return x.Select(MathOps.Log10); }
		public static Vector4 Log10 (this Vector4 x) { return x.Select(MathOps.Log10); }
		public static Vector2 Sin (this Vector2 x) { return x.Select(MathOps.Sin); }
		public static Vector3 Sin (this Vector3 x) { return x.Select(MathOps.Sin); }
		public static Vector4 Sin (this Vector4 x) { return x.Select(MathOps.Sin); }
		public static Vector2 Sinh (this Vector2 x) { return x.Select(MathOps.Sinh); }
		public static Vector3 Sinh (this Vector3 x) { return x.Select(MathOps.Sinh); }
		public static Vector4 Sinh (this Vector4 x) { return x.Select(MathOps.Sinh); }
		public static Vector2 Tan (this Vector2 x) { return x.Select(MathOps.Tan); }
		public static Vector3 Tan (this Vector3 x) { return x.Select(MathOps.Tan); }
		public static Vector4 Tan (this Vector4 x) { return x.Select(MathOps.Tan); }
		public static Vector2 Tanh (this Vector2 x) { return x.Select(MathOps.Tanh); }
		public static Vector3 Tanh (this Vector3 x) { return x.Select(MathOps.Tanh); }
		public static Vector4 Tanh (this Vector4 x) { return x.Select(MathOps.Tanh); }
		public static Vector2 Inverse (this Vector2 x) { return x.Select(MathOps.Inverse); }
		public static Vector3 Inverse (this Vector3 x) { return x.Select(MathOps.Inverse); }
		public static Vector4 Inverse (this Vector4 x) { return x.Select(MathOps.Inverse); }
		public static Vector2 Ceiling (this Vector2 x) { return x.Select(MathOps.Ceiling); }
		public static Vector3 Ceiling (this Vector3 x) { return x.Select(MathOps.Ceiling); }
		public static Vector4 Ceiling (this Vector4 x) { return x.Select(MathOps.Ceiling); }
		public static Vector2 Floor (this Vector2 x) { return x.Select(MathOps.Floor); }
		public static Vector3 Floor (this Vector3 x) { return x.Select(MathOps.Floor); }
		public static Vector4 Floor (this Vector4 x) { return x.Select(MathOps.Floor); }
		public static Vector2 Round (this Vector2 x) { return x.Select(MathOps.Round); }
		public static Vector3 Round (this Vector3 x) { return x.Select(MathOps.Round); }
		public static Vector4 Round (this Vector4 x) { return x.Select(MathOps.Round); }
		public static Vector2 Truncate (this Vector2 x) { return x.Select(MathOps.Truncate); }
		public static Vector3 Truncate (this Vector3 x) { return x.Select(MathOps.Truncate); }
		public static Vector4 Truncate (this Vector4 x) { return x.Select(MathOps.Truncate); }
		public static Vector2 Sqr (this Vector2 x) { return x.Select(MathOps.Sqr); }
		public static Vector3 Sqr (this Vector3 x) { return x.Select(MathOps.Sqr); }
		public static Vector4 Sqr (this Vector4 x) { return x.Select(MathOps.Sqr); }
		public static Vector2 Cube (this Vector2 x) { return x.Select(MathOps.Cube); }
		public static Vector3 Cube (this Vector3 x) { return x.Select(MathOps.Cube); }
		public static Vector4 Cube (this Vector4 x) { return x.Select(MathOps.Cube); }

		public static Vector2 Abs( this Vector2 x) { return Vector2.Abs(x); }
		public static Vector2 Clamp( this Vector2 self, Vector2 min, Vector2 max) { return Vector2.Clamp(self, min, max); }
		public static Vector2 Lerp( this Vector2 self, Vector2 x, float amount) { return Vector2.Lerp(self, x, amount); }
		public static Vector2 Average( this Vector2 self, Vector2 x) { return self.Lerp(x, 0.5f); }
		public static float Distance( this Vector2 self, Vector2 v) { return Vector2.Distance(self, v); }
		public static float DistanceSquared( this Vector2 self, Vector2 v) { return Vector2.DistanceSquared(self, v); }
		public static float Dot( this Vector2 self, Vector2 v) { return Vector2.Dot(self, v); }
		public static Vector2 Min( this Vector2 self, Vector2 v) { return Vector2.Min(self, v); }
		public static Vector2 Max( this Vector2 self, Vector2 v) { return Vector2.Min(self, v); }
		public static Vector2 Negate( this Vector2 self) { return Vector2.Negate(self); }
		public static Vector2 Normal( this Vector2 self) { return Vector2.Normalize(self); }
		public static Vector2 Sqrt( this Vector2 self) { return Vector2.SquareRoot(self); }
		public static Vector3 Abs( this Vector3 x) { return Vector3.Abs(x); }
		public static Vector3 Clamp( this Vector3 self, Vector3 min, Vector3 max) { return Vector3.Clamp(self, min, max); }
		public static Vector3 Lerp( this Vector3 self, Vector3 x, float amount) { return Vector3.Lerp(self, x, amount); }
		public static Vector3 Average( this Vector3 self, Vector3 x) { return self.Lerp(x, 0.5f); }
		public static float Distance( this Vector3 self, Vector3 v) { return Vector3.Distance(self, v); }
		public static float DistanceSquared( this Vector3 self, Vector3 v) { return Vector3.DistanceSquared(self, v); }
		public static float Dot( this Vector3 self, Vector3 v) { return Vector3.Dot(self, v); }
		public static Vector3 Min( this Vector3 self, Vector3 v) { return Vector3.Min(self, v); }
		public static Vector3 Max( this Vector3 self, Vector3 v) { return Vector3.Min(self, v); }
		public static Vector3 Negate( this Vector3 self) { return Vector3.Negate(self); }
		public static Vector3 Normal( this Vector3 self) { return Vector3.Normalize(self); }
		public static Vector3 Sqrt( this Vector3 self) { return Vector3.SquareRoot(self); }
		public static Vector4 Abs( this Vector4 x) { return Vector4.Abs(x); }
		public static Vector4 Clamp( this Vector4 self, Vector4 min, Vector4 max) { return Vector4.Clamp(self, min, max); }
		public static Vector4 Lerp( this Vector4 self, Vector4 x, float amount) { return Vector4.Lerp(self, x, amount); }
		public static Vector4 Average( this Vector4 self, Vector4 x) { return self.Lerp(x, 0.5f); }
		public static float Distance( this Vector4 self, Vector4 v) { return Vector4.Distance(self, v); }
		public static float DistanceSquared( this Vector4 self, Vector4 v) { return Vector4.DistanceSquared(self, v); }
		public static float Dot( this Vector4 self, Vector4 v) { return Vector4.Dot(self, v); }
		public static Vector4 Min( this Vector4 self, Vector4 v) { return Vector4.Min(self, v); }
		public static Vector4 Max( this Vector4 self, Vector4 v) { return Vector4.Min(self, v); }
		public static Vector4 Negate( this Vector4 self) { return Vector4.Negate(self); }
		public static Vector4 Normal( this Vector4 self) { return Vector4.Normalize(self); }
		public static Vector4 Sqrt( this Vector4 self) { return Vector4.SquareRoot(self); }

		public static Vector3 Cross( this Vector3 self, Vector3 x ) { return Vector3.Cross(self, x); }
} } 
